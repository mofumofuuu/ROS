<?xml version="1.0"?>
<launch>
  <arg name="ns" default="robot1"/>
  <arg name="format" default="xarco" doc="xacro ; urdf"/>
  <arg name="robot_type" value="$(env ROBOT_TYPE)" doc="robot_type [X1,X3,X3plus,R2,X7]"/>
  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="gui" default="true" />
  <arg name="run_camera" default="false"/>
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>

  <arg name="x_pos" default="-2.0"/>
  <arg name="y_pos" default="-0.5"/>
  <arg name="z_pos" default="0.0"/>
    
  <node name="tf_footprint_base" pkg="tf"   type="static_transform_publisher"   args="0 0 0 0 0 0 base_link base_footprint 40" />

  
    <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <env name="GAZEBO_MODEL_PATH" value="${GAZEBO_MODEL_PATH}:$(find zm_robot_warehouse)/models"/>
  <env name="GAZEBO_RESOURCE_PATH" value="${GAZEBO_RESOURCE_PATH}:$(find zm_robot_warehouse)/models"/>

  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find zm_robot_warehouse)/worlds/warehouse.world"/>
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>

  <!--node
    name="tf_laser_base"
    pkg="tf"
    type="static_transform_publisher"
    args="0.012548 0 0.1311 0 0 0 base_link laser_link 40" /-->

  <!--node
    name="tf_camera_base"
    pkg="tf"
    type="static_transform_publisher"
    args="0.095117 0 0.09955 0 0.0057171 0 base_link camera_link 40" /-->


<!-- urdf xml robot description loaded on the Parameter Server, converting the xacro into a proper urdf file-->
 <param name="robot_description" command="$(find xacro)/xacro --inorder $(find yahboomcar_description)/urdf/yahboomcar_X3.gazebo.urdf.xacro ns:=$(arg ns)" />
 

    <node pkg="gazebo_ros" type="spawn_model" name="spawn_urdf"  args="-urdf -model yahboomcar_$(arg robot_type)  -x $(arg x_pos) -y $(arg y_pos) -z $(arg z_pos) -param robot_description" />
      <!-- load the controllers -->
    <!--include file="$(find yahboomcar_gazebo)/launch/control.launch"></include-->
    <node   name="joint_state_publisher"   pkg="joint_state_publisher"    type="joint_state_publisher" />
  <node  name="robot_state_publisher" pkg="robot_state_publisher"  type="state_publisher" />
  
  <include file="$(find yahboomcar_gazebo)/launch/display.launch"></include>
  
  
  
   <!--include file="$(find yahboomcar_gazebo)/launch/slam_gmapping.launch"></include-->
   <!-- Launch the simulation joystick control-->
   <!--node pkg="yahboomcar_gazebo" name="gazebo_odometry_node" type="gazebo_odom.py">
    <remap from="/odom" to="/yahboomcar/odom"/></node--> 
  <!-- Publish "better odom" topic that is normally generated by the particle filter -->
  <!--node name="better_odom" pkg="topic_tools" type="relay"
          args="/vesc/odom /pf/pose/odom" /-->
  <!-- Allow for Gazebo to broadcast odom -->
  <!--node pkg="$(find yahboomcar_gazebo)" name="gazebo_odometry_node" type="gazebo_odometry.py"/--> 
  
  
</launch>
